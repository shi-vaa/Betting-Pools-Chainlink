/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BetszToken, BetszTokenInterface } from "../BetszToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "depositData",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_depositAdmin",
        type: "address",
      },
    ],
    name: "setDepositAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600781526642756e646c657360c81b6020808301918252835180850190945260048452631095539160e21b9084015281519192916200005d91600391620000ec565b50805162000073906004906020840190620000ec565b505050620000906200008a6200009660201b60201c565b6200009a565b620001cf565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000fa9062000192565b90600052602060002090601f0160209004810192826200011e576000855562000169565b82601f106200013957805160ff191683800117855562000169565b8280016001018555821562000169579182015b82811115620001695782518255916020019190600101906200014c565b50620001779291506200017b565b5090565b5b808211156200017757600081556001016200017c565b600181811c90821680620001a757607f821691505b60208210811415620001c957634e487b7160e01b600052602260045260246000fd5b50919050565b6112d880620001df6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063715018a6116100ad578063a457c2d711610071578063a457c2d714610271578063a9059cbb14610284578063cf2c52cb14610297578063dd62ed3e146102aa578063f2fde38b146102e357600080fd5b8063715018a614610235578063893d20e81461023d5780638da5cb5b1461024557806395d89b4114610256578063a2ad67a41461025e57600080fd5b806339509351116100f457806339509351146101a657806342966c68146101b957806349df728c146101ce57806370a08231146101e1578063710428571461020a57600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102f6565b6040516101469190611179565b60405180910390f35b61016261015d3660046110e2565b610388565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004611022565b61039e565b60405160128152602001610146565b6101626101b43660046110e2565b61044f565b6101cc6101c736600461112d565b61048b565b005b6101cc6101dc366004610fce565b610498565b6101766101ef366004610fce565b6001600160a01b031660009081526020819052604090205490565b60065461021d906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b6101cc61055f565b61021d610595565b6005546001600160a01b031661021d565b6101396105ae565b6101cc61026c366004610fce565b6105bd565b61016261027f3660046110e2565b610609565b6101626102923660046110e2565b6106a2565b6101cc6102a5366004611062565b6106af565b6101766102b8366004610fea565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101cc6102f1366004610fce565b61072b565b6060600380546103059061123c565b80601f01602080910402602001604051908101604052809291908181526020018280546103319061123c565b801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b60006103953384846107c3565b50600192915050565b60006103ab8484846108e8565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104355760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61044285338584036107c3565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103959185906104869086906111e1565b6107c3565b6104953382610ab6565b50565b6005546001600160a01b031633146104c25760405162461bcd60e51b815260040161042c906111ac565b6104956104d76005546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a082319060240160206040518083038186803b15801561051657600080fd5b505afa15801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e9190611145565b6001600160a01b0384169190610c01565b6005546001600160a01b031633146105895760405162461bcd60e51b815260040161042c906111ac565b6105936000610c53565b565b60006105a96005546001600160a01b031690565b905090565b6060600480546103059061123c565b6005546001600160a01b031633146105e75760405162461bcd60e51b815260040161042c906111ac565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561068b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161042c565b61069833858584036107c3565b5060019392505050565b60006103953384846108e8565b6006546001600160a01b0316336001600160a01b03161461070b5760405162461bcd60e51b815260206004820152601660248201527539b2b73232b910109e903232b837b9b4ba20b236b4b760511b604482015260640161042c565b60006107198284018461112d565b90506107258482610ca5565b50505050565b6005546001600160a01b031633146107555760405162461bcd60e51b815260040161042c906111ac565b6001600160a01b0381166107ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042c565b61049581610c53565b6001600160a01b0383166108255760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161042c565b6001600160a01b0382166108865760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161042c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661094c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161042c565b6001600160a01b0382166109ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161042c565b6001600160a01b03831660009081526020819052604090205481811015610a265760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161042c565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a5d9084906111e1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aa991815260200190565b60405180910390a3610725565b6001600160a01b038216610b165760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161042c565b6001600160a01b03821660009081526020819052604090205481811015610b8a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161042c565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610bb99084906111f9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016108db565b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610bfc908490610d84565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610cfb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161042c565b8060026000828254610d0d91906111e1565b90915550506001600160a01b03821660009081526020819052604081208054839290610d3a9084906111e1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610dd9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e569092919063ffffffff16565b805190915015610bfc5780806020019051810190610df7919061110d565b610bfc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161042c565b6060610e658484600085610e6d565b949350505050565b606082471015610ece5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161042c565b843b610f1c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161042c565b600080866001600160a01b03168587604051610f38919061115d565b60006040518083038185875af1925050503d8060008114610f75576040519150601f19603f3d011682016040523d82523d6000602084013e610f7a565b606091505b5091509150610f8a828286610f95565b979650505050505050565b60608315610fa4575081610448565b825115610fb45782518084602001fd5b8160405162461bcd60e51b815260040161042c9190611179565b600060208284031215610fdf578081fd5b81356104488161128d565b60008060408385031215610ffc578081fd5b82356110078161128d565b915060208301356110178161128d565b809150509250929050565b600080600060608486031215611036578081fd5b83356110418161128d565b925060208401356110518161128d565b929592945050506040919091013590565b600080600060408486031215611076578283fd5b83356110818161128d565b9250602084013567ffffffffffffffff8082111561109d578384fd5b818601915086601f8301126110b0578384fd5b8135818111156110be578485fd5b8760208285010111156110cf578485fd5b6020830194508093505050509250925092565b600080604083850312156110f4578182fd5b82356110ff8161128d565b946020939093013593505050565b60006020828403121561111e578081fd5b81518015158114610448578182fd5b60006020828403121561113e578081fd5b5035919050565b600060208284031215611156578081fd5b5051919050565b6000825161116f818460208701611210565b9190910192915050565b6020815260008251806020840152611198816040850160208701611210565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156111f4576111f4611277565b500190565b60008282101561120b5761120b611277565b500390565b60005b8381101561122b578181015183820152602001611213565b838111156107255750506000910152565b600181811c9082168061125057607f821691505b6020821081141561127157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461049557600080fdfea26469706673582212209321a94ec296c603643b2cd636ef208915321540418948d6c52be3441f1d0bb364736f6c63430008040033";

export class BetszToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BetszToken> {
    return super.deploy(overrides || {}) as Promise<BetszToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BetszToken {
    return super.attach(address) as BetszToken;
  }
  connect(signer: Signer): BetszToken__factory {
    return super.connect(signer) as BetszToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BetszTokenInterface {
    return new utils.Interface(_abi) as BetszTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BetszToken {
    return new Contract(address, _abi, signerOrProvider) as BetszToken;
  }
}
