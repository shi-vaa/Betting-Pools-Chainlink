/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NativeMetaTransaction,
  NativeMetaTransactionInterface,
} from "../NativeMetaTransaction";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff1916905534801561001a57600080fd5b5061002b610026610030565b610049565b6100f8565b600061004461009b60201b6104611760201c565b905090565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000333014156100f257600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506100f59050565b50335b90565b61098e806101076000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100c85780638da5cb5b146100d2578063a424e575146100ed578063f2fde38b1461010d57600080fd5b806320379ee5146100825780632d0335ab146100995780633408e470146100c2575b600080fd5b6001545b6040519081526020015b60405180910390f35b6100866100a73660046106d2565b6001600160a01b031660009081526003602052604090205490565b46610086565b6100d0610120565b005b6002546040516001600160a01b039091168152602001610090565b6101006100fb366004610700565b6101aa565b6040516100909190610898565b6100d061011b3660046106d2565b610377565b6101286104be565b6001600160a01b03166101436002546001600160a01b031690565b6001600160a01b03161461019e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101a860006104cd565b565b604080516060818101835233600081815260036020908152908590205484528301529181018690526101f06101e76002546001600160a01b031690565b8287878761051f565b6102465760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b6064820152608401610195565b336000908152600360205260409020546102619060016108ab565b336000908152600360205260408120919091558030886102896002546001600160a01b031690565b60405160200161029a929190610818565b60408051601f19818403018152908290526102b4916107fc565b6000604051808303816000865af19150503d80600081146102f1576040519150601f19603f3d011682016040523d82523d6000602084013e6102f6565b606091505b50909250905080808361031c5760405162461bcd60e51b81526004016101959190610898565b507fba6fc6ba916c344479c252b0878d405b4fa823b03117a50a4fa29d95f3b48bc06103506002546001600160a01b031690565b338b85604051610363949392919061084f565b60405180910390a150979650505050505050565b61037f6104be565b6001600160a01b031661039a6002546001600160a01b031690565b6001600160a01b0316146103f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610195565b6001600160a01b0381166104555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610195565b61045e816104cd565b50565b6000333014156104b857600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506104bb9050565b50335b90565b60006104c8610461565b905090565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160a01b0386166105855760405162461bcd60e51b815260206004820152602560248201527f4e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5360448201526424a3a722a960d91b6064820152608401610195565b60016105986105938761060f565b61068c565b6040805160008152602081018083529290925260ff851690820152606081018690526080810185905260a0016020604051602081039080840390855afa1580156105e6573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b6000604051806080016040528060438152602001610916604391398051602091820120835184830151604080870151805190860120905161066f950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b600061069760015490565b60405161190160f01b602082015260228101919091526042810183905260620161066f565b803560ff811681146106cd57600080fd5b919050565b6000602082840312156106e3578081fd5b81356001600160a01b03811681146106f9578182fd5b9392505050565b60008060008060808587031215610715578283fd5b843567ffffffffffffffff8082111561072c578485fd5b818701915087601f83011261073f578485fd5b813581811115610751576107516108ff565b604051601f8201601f19908116603f01168101908382118183101715610779576107796108ff565b816040528281528a6020848701011115610791578788fd5b826020860160208301378760208483010152809850505050505060208501359250604085013591506107c5606086016106bc565b905092959194509250565b600081518084526107e88160208601602086016108cf565b601f01601f19169290920160200192915050565b6000825161080e8184602087016108cf565b9190910192915050565b6000835161082a8184602088016108cf565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b6001600160a01b0385811682528416602082015260806040820181905260009061087b908301856107d0565b828103606084015261088d81856107d0565b979650505050505050565b6020815260006106f960208301846107d0565b600082198211156108ca57634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156108ea5781810151838201526020016108d2565b838111156108f9576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a26469706673582212201f3d2283958f0bd0fb5a23a4b68431910e70f5a7420e62da3d379e820b079b5b64736f6c63430008040033";

export class NativeMetaTransaction__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NativeMetaTransaction> {
    return super.deploy(overrides || {}) as Promise<NativeMetaTransaction>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NativeMetaTransaction {
    return super.attach(address) as NativeMetaTransaction;
  }
  connect(signer: Signer): NativeMetaTransaction__factory {
    return super.connect(signer) as NativeMetaTransaction__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NativeMetaTransactionInterface {
    return new utils.Interface(_abi) as NativeMetaTransactionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NativeMetaTransaction {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NativeMetaTransaction;
  }
}
